version: '3.8'

services:
  api:
    build: .
    ports:
      - 8080:8080
    environment:
      - HTTP_ADDR=${HTTP_ADDR}
      - HTTP_WRITE_TIMEOUT=${HTTP_WRITE_TIMEOUT}
      - HTTP_READ_TIMEOUT=${HTTP_READ_TIMEOUT}
      - HTTP_SHUTDOWN_TIMEOUT=${HTTP_SHUTDOWN_TIMEOUT}

      - POSTGRESQL_USER=${POSTGRESQL_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_HOST=${POSTGRESQL_HOST}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      - POSTGRESQL_PORT=${POSTGRESQL_PORT}

      - TEST_POSTGRESQL_USER=${TEST_POSTGRESQL_USER}
      - TEST_POSTGRESQL_PASSWORD=${TEST_POSTGRESQL_PASSWORD}
      - TEST_POSTGRESQL_HOST=${TEST_POSTGRESQL_HOST}
      - TEST_POSTGRESQL_DATABASE=${TEST_POSTGRESQL_DATABASE}
      - TEST_POSTGRESQL_PORT=${TEST_POSTGRESQL_PORT}
    depends_on:
      - postgres

  postgres:
    image: postgres:16.2-alpine3.19
    environment:
      - POSTGRES_USER=${POSTGRESQL_USER}
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRES_DB=${POSTGRESQL_DATABASE}
    ports:
      - '${POSTGRESQL_PORT}:${POSTGRESQL_PORT}'
    command: -p ${POSTGRESQL_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  postgres_test:
    image: postgres:16.2-alpine3.19
    environment:
      - POSTGRES_USER=${TEST_POSTGRESQL_USER}
      - POSTGRES_PASSWORD=${TEST_POSTGRESQL_PASSWORD}
      - POSTGRES_DB=${TEST_POSTGRESQL_DATABASE}
    ports:
      - '${TEST_POSTGRESQL_PORT}:${TEST_POSTGRESQL_PORT}'
    command: -p ${TEST_POSTGRESQL_PORT}
    volumes:
      - postgres_test_data:/var/lib/postgresql/data

volumes:
  postgres_data:
  postgres_test_data:
